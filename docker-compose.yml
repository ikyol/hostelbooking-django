version: '3'

services:
  db:
    image: postgres
    container_name: db
    env_file:
      - .env
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - "POSTGRES_HOST_AUTH_METHOD=trust"
    networks:
      - web


  web:
    build: 
      context: ./
      dockerfile: Dockerfile
    container_name: web
    env_file:
      - .env
    command: >
      bash -c "python manage.py makemigrations &&
              python manage.py migrate &&
              python manage.py collectstatic --noinput &&
              python manage.py runserver 0.0.0.0:8000"
    volumes:
      # - static_volume:/home/app/web/staticfiles
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - "POSTGRES_HOST_AUTH_METHOD=trust"
    depends_on:
      - db
    networks:
      - web


  redis:
    image: redis
    env_file:
      - .env
    container_name: redis
    networks:
      - web

      
  celery:
    restart: always
    container_name: celery
    env_file:
      - .env
    build:
      context: ./
      dockerfile: Dockerfile
    command: celery -A book worker -l info
    volumes:
      - .:/app
    environment:
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - "POSTGRES_HOST_AUTH_METHOD=trust"
    depends_on:
      - redis
    networks:
      - web


  # nginx:
  #   build:
  #     context: ./
  #     dockerfile: Dockerfile.prod
  #   container_name: nginx-1-19-0
  #   ports:
  #     - "80:80"
  #   depends_on:
  #     - web
  #   networks:
  #     - web

    

networks:
  web:
    driver: bridge
